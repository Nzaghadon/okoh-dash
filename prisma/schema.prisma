// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  image     String?
  location  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Account   Account[]
  Session   Session[]
  Cart      Cart[]
  Order     Order[]
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  balance            Float
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  user               User     @relation(fields: [userId], references: [id])
  Order              Order[]

  @@index([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  userAgent    String?
  active       Boolean  @default(true)
  sessionToken String   @unique
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  CartItem  CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  quantity  Int
  amount    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  accountId  Int
  totalPrice Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
  account    Account?    @relation(fields: [accountId], references: [id])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Float
  orderId   Int
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
}

model Product {
  id               Int        @id @default(autoincrement())
  name             String
  price            Float
  image            String
  description      String
  rating           Int
  brand            String?
  currentInventory Int?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  categories       Category[]

  @@index([id])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@index([name])
}
